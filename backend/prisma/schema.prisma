generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Customer {
  id           String        @id @default(auto()) @map("_id") @db.ObjectId
  name         String
  address      String
  phone        String
  stdId        String?
  customerId   String        @unique
  registerAt   String?    
  payments     Payment[]
  transactions Transaction[]
}

model Payment {
  id           String         @id @default(auto()) @map("_id") @db.ObjectId
  customerId   String         @map("customer_id") @db.ObjectId
  customer     Customer       @relation(fields: [customerId], references: [id])
  year         Int
  totalDebt    Float          @default(0)
  totalAdvance Float          @default(0)
  months       MonthPayment[]
  updatedAt    DateTime       @updatedAt
  transactions Transaction[]
}

model MonthPayment {
  id           String        @id @default(auto()) @map("_id") @db.ObjectId
  paymentId    String        @map("payment_id") @db.ObjectId
  payment      Payment       @relation(fields: [paymentId], references: [id])
  month        Int
  amount       Float
  paidVia      String?
  debt         Float         @default(0)
  advance      Float         @default(0)
  paymentDate  DateTime?
  status       String        @default("Unpaid")
  note         String?
  createdAt    DateTime      @default(now())
  transactions Transaction[]

  @@unique([paymentId, month])
}

model Transaction {
  id             String        @id @default(auto()) @map("_id") @db.ObjectId
  customerId     String        @map("customer_id") @db.ObjectId
  customer       Customer      @relation(fields: [customerId], references: [id])
  paymentId      String?       @map("payment_id") @db.ObjectId
  payment        Payment?      @relation(fields: [paymentId], references: [id])
  monthPaymentId String?       @map("month_payment_id") @db.ObjectId
  monthPayment   MonthPayment? @relation(fields: [monthPaymentId], references: [id])
  amount         Float
  type           String
  note           String?
  createdAt      DateTime      @default(now())
}
